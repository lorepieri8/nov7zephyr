import sys, os
import random
import click
from eth_utils import decode_hex, encode_hex

KEY_WARNING = '#pragma message("PRIVATE KEY GENERATED USING random.random(). NOT SUITABLE FOR PRODUCTION USE")'

def encode_bytes(data):
    ret = ''
    for x in data:
        ret += '\\x%02x' % x
    return ret

@click.command()
@click.option(
    '--keyfile',
)
@click.option(
    '--auto',
    default=False,
    is_flag=True,
    help='generate privkey if keyfile is missing'
)
def main(keyfile, auto):
    k = None
    if keyfile:
        try:
            k = open(keyfile).read().strip()
        except FileNotFoundError:
            if auto:
                pass
            else:
                raise
    if k is None:
        k = "%064x" % (random.randrange(1, 2**256))
        print(KEY_WARNING)

    x = encode_bytes(decode_hex(k))
    print(f"""
#include <stdint.h>

// file generated by "{' '.join(sys.argv)}"
// hex pk: {k}
const uint8_t g_zephyr_private_key[] = "{x}";
    """
    )


if __name__ == "__main__":
    main()
